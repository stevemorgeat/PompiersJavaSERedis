/*
 IncidentAjout.java
 Utilisation de IdIncident initialisé à 0 au démarrage
 Utilisation de Incidents (table des incidents -> Incident1, Incident2, ...)
 */
package fr.pb.securiteincendie;

import fr.pb.global.Globale;
import java.util.*;
import javax.swing.JFrame;
import redis.clients.jedis.Jedis;

/**
 *
 * @author pascal
 */
public class IncidentAjouter extends javax.swing.JFrame {

    private final Jedis jedis;
    private Map<String, String> mapLieuxInverse;
    private Set<String> setCauses;
    private Map<String, String> mapPersonnesInverse;

    /**
     * Creates new form
     */
    public IncidentAjouter() {
        initComponents();

        jedis = Globale.getConnexionRedis();
        remplirListes();

        setTitle("Ajouter un incident");
        setLocationRelativeTo(null);
        setVisible(true);
    } /// Constructeur

    /**
     *
     */
    private void remplirListes() {

        /**
         * Remplissage de la combobox lieux
         */
        try {
            //Recuperation de l'id et du nom des lieux
            Map<String, String> mapLieux = jedis.hgetAll("Lieux");

            String cle;
            String valeur;

            //Inversion de id/lieu par lieu/id
            mapLieuxInverse = new TreeMap<>();

            for (Map.Entry<String, String> entry : mapLieux.entrySet()) {
                cle = entry.getKey();
                valeur = entry.getValue();
                mapLieuxInverse.put(valeur, cle);

                jComboBoxLieux.addItem(valeur);
            }

        } catch (Exception e) {
            jLabelMessage.setText(e.getMessage());
        }

        /**
         * Remplissage de la combobox causes
         */
        try {
            // Liste les éléments du set
            Set<String> setCauses = jedis.smembers("Causes");
            for (String lsCause : setCauses) {
                jComboBoxCauses.addItem(lsCause);
            }
        } catch (Exception e) {
            jLabelMessage.setText(e.getMessage());
        }

        /**
         * Remplissage de la combobox personnes
         */
        try {
            //Recuperation de l'id et du nom des lieux
            Map<String, String> mapLieux = jedis.hgetAll("Personnes");

            String cle;
            String valeur;

            //Inversion de id/lieu par lieu/id
            mapPersonnesInverse = new TreeMap<>();

            for (Map.Entry<String, String> entry : mapLieux.entrySet()) {
                cle = entry.getKey();
                valeur = entry.getValue();
                mapPersonnesInverse.put(valeur, cle);

                jComboBoxPersonnes.addItem(cle);
            }

        } catch (Exception e) {
            jLabelMessage.setText(e.getMessage());
        }
    } /// remplirListes

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonAjouter = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();
        jComboBoxLieux = new javax.swing.JComboBox();
        jComboBoxCauses = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxPersonnes = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Lieu");

        jLabel2.setText("Cause");

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jLabelMessage.setText("Message");

        jLabel3.setText("Personne");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAjouter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxCauses, 0, 298, Short.MAX_VALUE)
                            .addComponent(jComboBoxLieux, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelMessage)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxPersonnes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxLieux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxCauses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxPersonnes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButtonAjouter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMessage)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed

        String lsIdLieu;
        String lsNomLieu;
        String lsCause;
        String lsPersonne;
        String lsDate;

        Calendar calendrier = new GregorianCalendar();

        String lsSecondes = Integer.toString(calendrier.get(Calendar.SECOND));
        String lsMinutes = Integer.toString(calendrier.get(Calendar.MINUTE));
        String lsHeures = Integer.toString(calendrier.get(Calendar.HOUR_OF_DAY));
        String lsJour = Integer.toString(calendrier.get(Calendar.DAY_OF_MONTH));
        String lsMois = Integer.toString(calendrier.get(Calendar.MONTH) + 1);
        String lsAnnee = Integer.toString(calendrier.get(Calendar.YEAR));

        lsNomLieu = jComboBoxLieux.getSelectedItem().toString();
        lsCause = jComboBoxCauses.getSelectedItem().toString();
        lsPersonne = jComboBoxPersonnes.getSelectedItem().toString();
        lsIdLieu = mapLieuxInverse.get(lsNomLieu);

        lsDate = lsJour + "/" + lsMois + "/" + lsAnnee + " à " + lsHeures + ":" + lsMinutes + ":" + lsSecondes;

        jLabelMessage.setText("A " + lsIdLieu + " causé par " + lsCause + " impliquant " + lsPersonne + " le " + lsDate);

        //Recuperation des incidents
        String lsIdIncident = jedis.get("IdIncident");
        if (lsIdIncident == null) {
            jedis.set("IdIncident", "0");
        }

        //Incrementation et recuperation des incidents
        jedis.incr("IdIncident");
        lsIdIncident = jedis.get("IdIncident");
  
        //Ajout des incidents dans la liste
        String lsIncident = "Incident" + lsIdIncident;
        System.out.println(lsIncident);
        jedis.rpush("IncidentsListe", lsIncident);

        //Liste chainée triée dans l'ordre d'insertion - cf table IncidentLister
        Map<String, String> mapIncidents = new LinkedHashMap();
        mapIncidents.put("id", lsIdIncident);
        mapIncidents.put("date", lsDate);
        mapIncidents.put("lieu", lsNomLieu);
        mapIncidents.put("cause", lsCause);
        mapIncidents.put("personne", lsPersonne);
        
        //Ajout dans la base
        jedis.hmset(lsIncident, mapIncidents);

        
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // 
        if (jedis != null) {
            jedis.close();
        }
        JFrame f = Globale.getFenetre();
        f.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IncidentAjouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IncidentAjouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IncidentAjouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IncidentAjouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IncidentAjouter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JComboBox jComboBoxCauses;
    private javax.swing.JComboBox jComboBoxLieux;
    private javax.swing.JComboBox jComboBoxPersonnes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelMessage;
    // End of variables declaration//GEN-END:variables
}
